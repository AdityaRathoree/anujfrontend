{"ast":null,"code":"// import { searchSlice } from '@reduxjs/toolkit'\n\n// export const persistedSearchReducer = searchSlice({\n//   // name of slice (must be unique)\n//   name: 'search',\n//   initialState: {\n//     itemSearched: [],\n//   },\n//   reducers: {\n//     // action: action handler\n//     addToSearch: (state,action) => {\n//       state.itemSearched = action.payload.quantity;\n//     },\n//     // action: action handler\n//     removeFromCart: (state,action) => {\n//       state.itemSearched = action.payload.quantity;\n//     },\n//     // cartCountSetter: (state) => {\n//     //   state.itemCounter = state\n//     // },\n//   },\n// })\n\n// export const { addToSearch, removeFromCart } = persistedSearchReducer.actions\n// export default persistedSearchReducer.reducer","map":{"version":3,"names":[],"sources":["C:/Users/ratho/OneDrive/Desktop/My Workspace/Project_Ecommerce/react-express-sample/ecommerce-app/web-app/src/features/searchSlice.js"],"sourcesContent":["// import { searchSlice } from '@reduxjs/toolkit'\r\n\r\n// export const persistedSearchReducer = searchSlice({\r\n//   // name of slice (must be unique)\r\n//   name: 'search',\r\n//   initialState: {\r\n//     itemSearched: [],\r\n//   },\r\n//   reducers: {\r\n//     // action: action handler\r\n//     addToSearch: (state,action) => {\r\n//       state.itemSearched = action.payload.quantity;\r\n//     },\r\n//     // action: action handler\r\n//     removeFromCart: (state,action) => {\r\n//       state.itemSearched = action.payload.quantity;\r\n//     },\r\n//     // cartCountSetter: (state) => {\r\n//     //   state.itemCounter = state\r\n//     // },\r\n//   },\r\n// })\r\n\r\n// export const { addToSearch, removeFromCart } = persistedSearchReducer.actions\r\n// export default persistedSearchReducer.reducer\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}